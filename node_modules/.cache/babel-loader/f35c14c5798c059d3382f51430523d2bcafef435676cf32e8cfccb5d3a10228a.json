{"ast":null,"code":"import axios from 'axios';\nexport function getFavoriteMovies(username) {\n  return new Promise((resolve, reject) => {\n    axios.get('http://localhost:3000/getFavoriteMovies', {\n      params: {\n        username\n      }\n    }).then(response => {\n      // Extract the data from the response object\n      const favoriteMovies = response.data;\n      console.log(response);\n\n      // Resolve the promise with the extracted data\n      resolve(favoriteMovies);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n}\nexport function getAllMovies() {\n  return new Promise((resolve, reject) => {\n    axios.get('http://localhost:3000/getAllMovies').then(response => {\n      // Extract the data from the response object\n      const allMovies = response.data;\n\n      // Resolve the promise with the extracted data\n      resolve(allMovies);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n}","map":{"version":3,"names":["axios","getFavoriteMovies","username","Promise","resolve","reject","get","params","then","response","favoriteMovies","data","console","log","catch","error","getAllMovies","allMovies"],"sources":["/Users/ya6115131/digital-ocean-tutorial/src/movieService.js"],"sourcesContent":["import axios from 'axios';\n\nexport function getFavoriteMovies(username) {\n  return new Promise((resolve, reject) => {\n    axios\n      .get('http://localhost:3000/getFavoriteMovies', { params: { username } })\n      .then(response => {\n        // Extract the data from the response object\n        const favoriteMovies = response.data;\n              console.log(response);\n\n\n        // Resolve the promise with the extracted data\n        resolve(favoriteMovies);\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n}\n\nexport function getAllMovies() {\n  return new Promise((resolve, reject) => {\n    axios\n      .get('http://localhost:3000/getAllMovies')\n      .then(response => {\n        // Extract the data from the response object\n        const allMovies = response.data;\n\n        // Resolve the promise with the extracted data\n        resolve(allMovies);\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,SAASC,iBAAiBA,CAACC,QAAQ,EAAE;EAC1C,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCL,KAAK,CACFM,GAAG,CAAC,yCAAyC,EAAE;MAAEC,MAAM,EAAE;QAAEL;MAAS;IAAE,CAAC,CAAC,CACxEM,IAAI,CAACC,QAAQ,IAAI;MAChB;MACA,MAAMC,cAAc,GAAGD,QAAQ,CAACE,IAAI;MAC9BC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;;MAG3B;MACAL,OAAO,CAACM,cAAc,CAAC;IACzB,CAAC,CAAC,CACDI,KAAK,CAACC,KAAK,IAAI;MACdV,MAAM,CAACU,KAAK,CAAC;IACf,CAAC,CAAC;EACN,CAAC,CAAC;AACJ;AAEA,OAAO,SAASC,YAAYA,CAAA,EAAG;EAC7B,OAAO,IAAIb,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCL,KAAK,CACFM,GAAG,CAAC,oCAAoC,CAAC,CACzCE,IAAI,CAACC,QAAQ,IAAI;MAChB;MACA,MAAMQ,SAAS,GAAGR,QAAQ,CAACE,IAAI;;MAE/B;MACAP,OAAO,CAACa,SAAS,CAAC;IACpB,CAAC,CAAC,CACDH,KAAK,CAACC,KAAK,IAAI;MACdV,MAAM,CAACU,KAAK,CAAC;IACf,CAAC,CAAC;EACN,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}